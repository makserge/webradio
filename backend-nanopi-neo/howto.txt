How to for PCM5102 I2S DAC enabled

1. Download Armbian
 
from
https://www.armbian.com/nanopi-neo/

direct link

https://dl.armbian.com/nanopineo/Ubuntu_xenial_default.7z

2. Format microSD card using SDFormatter with "format size adjustment - on" option
(from https://www.sdcard.org/downloads/formatter_4/eula_windows/index.html)

3. Make bootable card using Rufus with "DD" option
(http://rufus.akeo.ie/downloads/rufus-2.11p.exe)

4. Using Putty
SSH to 192.168.137.157 using root / 1234

5. Change password 1234 to armbian1

6. Set username to webradio with password 123456

7. Update system
apt upgrade

8. Set timezone and optimize system


armbian-config
Change your timezone->Europe->Kiev


9. Check audio devices

root@nanopineo:~# aplay -l
**** List of PLAYBACK Hardware Devices ****
card 0: audiocodec [audiocodec], device 0: SUNXI-CODEC sndcodec-0 []
  Subdevices: 1/1
  Subdevice #0: subdevice #0
card 1: sndhdmi [sndhdmi], device 0: SUNXI-HDMIAUDIO sndhdmi-0 []
  Subdevices: 1/1
  Subdevice #0: subdevice #0

10. Update script.bin

cd /boot

bin2fex script.bin script.fex
nano script.fex

Replace

[twi1]
twi_used = 1

to

[twi1]
twi_used = 0

and

[pcm0]
daudio_used = 0

to

[pcm0]
daudio_used = 1



than 

fex2bin script.fex script.bin

and 

reboot

11. Check audio devices for I2S device

aplay -l

 **** List of PLAYBACK Hardware Devices ****
card 0: audiocodec [audiocodec], device 0: SUNXI-CODEC sndcodec-0 []
  Subdevices: 1/1
  Subdevice #0: subdevice #0
card 1: snddaudio [snddaudio], device 0: SUNXI-TDM0 snddaudio-0 []
  Subdevices: 1/1
  Subdevice #0: subdevice #0
card 2: sndhdmi [sndhdmi], device 0: SUNXI-HDMIAUDIO sndhdmi-0 []
  Subdevices: 1/1
  Subdevice #0: subdevice #0

12. Install MPD and MPC

apt install mpd mpc


13. Update MPD config
nano /etc/mpd.conf

replace

audio_output {
        type            "alsa"
        name            "My ALSA Device"
#       device          "hw:0,0"        # optional
#       mixer_type      "hardware"      # optional
#       mixer_device    "default"       # optional
#       mixer_control   "PCM"           # optional
#       mixer_index     "0"             # optional
}

to 

audio_output {
        type            "alsa"
        name            "I2S DAC"
		device          "hw:1,0"
        format          "*:32:*"
        mixer_type      "software"
#       device          "hw:0,0"        # optional
#       mixer_type      "hardware"      # optional
#       mixer_device    "default"       # optional
#       mixer_control   "PCM"           # optional
#       mixer_index     "0"             # optional
}

and 

log_file                        "/var/log/mpd/mpd.log"

to 

log_file                        "/var/log/mpd.log"

systemctl restart mpd

ln -s /media /var/lib/mpd/music/media

mpc update

14. Test playback

mpc add https://zaycevfm.cdnvideo.ru/ZaycevFM_disco_256.mp3
mpc play
mpc status

15. Wifi setup for USB module with 0bda:8176 (TP-Link TL-WN725N)

lsusb
Bus 004 Device 003: ID 0bda:8176 Realtek Semiconductor Corp. RTL8188CUS 802.11n WLAN Adapter

16. Setup Wi-Fi network in nmtui

select network from list and choose activate
enter password and press ok

Disable second wlan interface

nano /etc/network/interfaces

add to the end

iface wlan1 inet manual


17. USB sticks automount

apt-get install usbmount pmount

nano /etc/usbmount/usbmount.conf

replace 

FS_MOUNTOPTIONS=""

to

FS_MOUNTOPTIONS="-fstype=vfat,iocharset=utf8,uid=1000,gid=1000,dmask=0002,fmask=0113"


18. Serial port setup

nano /etc/rc.local

add 

stty -F /dev/ttyS1 cs8 9600 ignbrk -brkint -icrnl -imaxbel -opost -onlcr -isig -icanon -iexten -echo -echoe -echok -echoctl -echoke noflsh -ixon -crtscts 

before 

exit 0


19. Check port /dev/ttyS1

Write
echo "hissadfsdfsfs" > /dev/ttyS1   

Read 
cat /dev/ttyS1


20. NodeJS

curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -

apt install -y nodejs

21. CouchDB

wget http://packages.erlang-solutions.com/debian/erlang_solutions.asc
sudo apt-key add erlang_solutions.asc
sudo apt-get update
sudo apt-get install -y erlang-nox erlang-dev erlang-reltool
sudo apt-get install -y libmozjs185-1.0 libmozjs185-dev
sudo apt-get install -y libcurl4-openssl-dev libicu-dev

sudo useradd -d /home/couchdb couchdb
sudo mkdir /home/couchdb
sudo chown couchdb:couchdb /home/couchdb

wget http://apache.ip-connect.vn.ua/couchdb/source/2.1.1/apache-couchdb-2.1.1.tar.gz
tar zxvf apache-couchdb-2.1.1.tar.gz
cd apache-couchdb-2.1.1/

./configure
make release

cd ./rel/couchdb
sudo cp -Rp * /home/couchdb
sudo chown -R couchdb:couchdb /home/couchdb

cd /home/couchdb/etc
sudo nano local.ini

Edit the [chttpd] section and change this line to enable remote access from your local IP address.

from 
;bind_address = 127.0.0.1
to
bind_address = 0.0.0.0


Run CouchDB
sudo -i -u couchdb /home/couchdb/bin/couchdb

Open Fauxton Admin Interface via that URL:

http://192.168.137.157:5984/_utils/

Add service
sudo nano /etc/systemd/system/couchdb.service

[Unit]
Description=Couchdb service
After=network.target

[Service]
Type=simple
User=root
ExecStart=/home/couchdb/bin/couchdb -o /dev/stdout -e /dev/stderr
Restart=always

[Install]
WantedBy=multi-user.target



Register your systemd service
systemctl daemon-reload
systemctl start couchdb.service
systemctl enable couchdb.service

#reboot
sudo reboot

After the restart, please check if the Couch DB 2.0 service was executed properly.


22. Create DB

curl -X PUT http://192.168.137.157:5984/webradio

22. Webradio


cd /home/webradio/backend

chmod +x /home/webradio/backend/console/alarm.js
chmod +x /home/webradio/backend/console/time.sh


nano /etc/rc.local

add

node /home/webradio/backend/index.js

npm install
node index.js
npm start

23. Samba

apt install samba samba-common-bin -y

nano /etc/samba/smb.conf
 
[global]
workgroup = WORKGROUP
server string = Samba Server %v
netbios name = webradio
security = user
map to guest = bad user
dns proxy = no
dos charset = cp866
unix charset = UTF8

[media]
comment = Media
path = /media
valid users = webradio
read only = no
browseable = yes
public = yes
writable = yes


sudo smbpasswd -a webradio
New SMB password: webradio
Retype new SMB password: webradio

sudo systemctl restart smbd.service

24. AirPlay

apt-get install avahi-daemon shairport-sync

nano /etc/shairport-sync.conf

add before

//      name = "Shairport Sync Player"; // This is the name the service will ad$

name = "WebRadio";

and

//  output_device = "default";

output_device = "hw:1";


/etc/init.d/shairport-sync start

armbian-config
Services->Switch off shairport-sync